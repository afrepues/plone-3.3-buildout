[buildout]
extends =
    versions/plone-3.3.cfg
    versions/local-manual.cfg

extensions =
    buildout.dumppickedversions
    buildout.umask

dump-picked-versions-file = versions/local-auto.cfg
umask = 027

allow-hosts =
    *.python.org
    dist.plone.org
    effbot.org
prefer-final = true
versions = versions

parts =
    separate-data
    zeo
    zopepy
    z2-debug
    supervisor


[z2-instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
eggs =
    Pillow
    Plone

    Products.PloneFormGen

    quintagroup.plonecaptchas
    quintagroup.pfg.captcha

zeo-client = true
shared-blob = on
zeo-address = ${zeo:socket-name}


[z2-debug]
<= z2-instance

debug-mode = on

http-address = ${ports:z2-debug}


[zopepy]
recipe = zc.recipe.egg
eggs = ${z2-instance:eggs}
interpreter = zopepy


[zeo]
recipe = plone.recipe.zope2zeoserver
zope2-location = ${zope2:location}
eggs = ${z2-instance:eggs}
zeo-address = ${:socket-name}
socket-name = ${buildout:directory}/var/${:_buildout_section_name_}.zdsock
monitor-address = ${ports:zeo-monitor}


[zope2]
recipe = plone.recipe.zope2install
url = ${versions:zope2-url}


[separate-data]
recipe = collective.recipe.filestorage
location     = var/data/%(fs_part_name)s/filestorage/Data.fs
blob-storage = var/data/%(fs_part_name)s/blobstorage

zeo = zeo
zopes =
    z2-debug


[supervisor]
# To make it easy to run both bin/plone and bin/zeo
recipe = collective.recipe.supervisor
umask = 027

http-socket = unix
file = ${buildout:directory}/var/supervisord.socket

programs =
#   prio name				proc				 	parameters
    0	 zeo				${buildout:directory}/bin/zeo		[ fg ]
    15	 z2-debug (autostart=false)	${buildout:directory}/bin/z2-debug	[ console ]	true
